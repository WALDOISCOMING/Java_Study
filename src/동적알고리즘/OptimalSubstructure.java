package 동적알고리즘;
/*
 * 동적 프로그래밍은
 * 1.최적화 문제 혹은 카운팅 문제에 적용됨.
 * 2.순환식을 정의한다.
 * 3.순환식을 memoization(현재 필요한거만.저장시킨다.) 혹은 buttom-up(모든걸 다 돌려서 저장시킴.) 방식으로 푼다.
 * sub문제를 풀어서 문제를 푸는 분할정복법과 연관이 있다.
 * 분할정복법에서는 분할된것 끼리는 서로서(연관x)이지만 동적계획법에서는 연관되어있을수도 있다.
 * 서로 겹치는 sub문제를 해결해서 원 문제를 해결한다.
 * 문제의 최적해가 sub문제로부터 효율적으로 구해진다면 optimal substructure(최적 구조)
 * 분할정복적,탐욕적기법,동적계획법 문제 모두 이런 특성 가진다.
 * 최단경로에서 start-end까지 최적 경로라면 그 도중에서도 최적이다.
 * 
 */
public class OptimalSubstructure {

}
